name: Appium CI
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Android Github Action
      uses: Vukan-Markovic/Github-Android-Action@1.2
    - uses: malinskiy/action-android/install-sdk@release/0.0.5
    - name: Install and Run Appium Server
      uses: moatazeldebsy/appium-server-gitHub-action@V1.0.4
    - name: Install Android System Image
      run: |
        cd $ANDROID_HOME/tools/bin
        sdkmanager --list
        sdkmanager "system-images;android-23;google_apis;armeabi-v7a"
        sdkmanager --licenses
    - name: Start Android Emulator
      run: | 
        cd $ANDROID_HOME/tools/bin
        echo no | avdmanager create avd -n test -k 'system-images;android-23;google_apis;armeabi-v7a'
        avdmanager list avd
        cd ..
        emulator -avd test -no-window -no-boot-anim -no-audio -verbose &
        bootanim=""
        failcounter=0
        timeout_in_sec=360
        until [[ "$bootanim" =~ "stopped" ]]; do
        bootanim=`adb -e shell getprop init.svc.bootanim 2>&1 &`
        if [[ "$bootanim" =~ "device not found" || "$bootanim" =~ "device offline"
        || "$bootanim" =~ "running" ]]; then
        let "failcounter += 1"
        echo "Waiting for emulator to start"
        if [[ $failcounter -gt timeout_in_sec ]]; then
        echo "Timeout ($timeout_in_sec seconds) reached; failed to start emulator"
        exit 1
        fi
        fi
        sleep 1
        done
        echo "Emulator is ready"
        $ANDROID_HOME/platform-tools/adb shell input keyevent 82 &
        $ANDROID_HOME/platform-tools/adb shell input keyevent 4 &
        DURATION=$(( `date +%s` - START )) > /dev/null
        echo "Android Emulator started after $DURATION seconds."
        sleep 60
    - name: Run UI Tests
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew test
 
